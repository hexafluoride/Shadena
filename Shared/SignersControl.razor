
<div class="input-group">
    <input type="text" class="form-control" name="signer-pubkey" placeholder="Public key" @bind="newSignerName"/>
    <button class="btn btn-sm btn-outline-primary" type="button" onclick="@AddSigner"><span class="oi oi-plus" aria-hidden="true"></span> Add signer</button>
</div>
<TableTemplate Items="@Signers" Context="signer" >
    <RawRowTemplate>
        <tr>
            <td class="align-middle text-wrap font-monospace">@signer.PubKey</td>
            <td class="col-2">
                <button class="btn btn-sm btn-outline-danger" type="button" @onclick="@(e => RemoveSigner(signer))">
                    <span class="oi oi-minus" aria-hidden="true"></span> Remove
                </button>
            </td>
        </tr>
        <tr>
            <td>
                <div class="container-fluid">
                    <div class="input-group">
                        <input type="text" class="form-control" name="signer-capability" placeholder="(coin.GAS)" @bind="newCapabilityContents"/>
                        <button class="btn btn-sm btn-outline-primary" type="button" @onclick="@(e => AddCapability(signer))"><span class="oi oi-plus" aria-hidden="true"></span> Add capability</button>
                    </div>
                    <TableTemplate Items="@signer.Capabilities" Context="capability" Classes="table-sm table-secondary">
                        <RowTemplate>
                            <td class="align-middle text-wrap font-monospace"><small>@capability</small></td>
                            <td class="col-2">
                                <button class="btn btn-sm btn-outline-danger" type="button" @onclick="@(e => RemoveCapability(signer, capability))">
                                    <span class="oi oi-minus" aria-hidden="true"></span> Remove
                                </button>
                            </td>
                        </RowTemplate>
                    </TableTemplate>
                </div>
            </td>
        </tr>
    </RawRowTemplate>
</TableTemplate>

@code {
    string newSignerName = "";
    string newCapabilityContents = "";
    
    [Parameter]
    public List<PactSigner> Signers { get; set; }
    
    [Parameter]
    public EventCallback SignersChanged { get; set; }

    async Task SignalUpdate() => SignersChanged.InvokeAsync();
    
    async Task AddSigner()
    {
        if (string.IsNullOrWhiteSpace(newSignerName))
            return;
        
        Signers.Add(new PactSigner(newSignerName));
        newSignerName = "";
        await SignalUpdate();
    }

    async Task AddCapability(PactSigner signer)
    {
        if (string.IsNullOrWhiteSpace(newCapabilityContents))
            return;

        var newCap = PactCapability.FromString(newCapabilityContents);
        
        if (newCap != null)
            signer.Capabilities.Add(newCap);
        
        newCapabilityContents = "";
        await SignalUpdate();
    }

    async Task RemoveSigner(PactSigner signer)
    {
        Signers.Remove(signer);
        await SignalUpdate();
    }

    async Task RemoveCapability(PactSigner signer, PactCapability capability)
    {
        signer.Capabilities.Remove(capability);
        await SignalUpdate();
    }
}